/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TodosOfflineRouteImport } from './routes/todos-offline'
import { Route as TodosRouteImport } from './routes/todos'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AdminChatRouteImport } from './routes/admin-chat'
import { Route as IndexRouteImport } from './routes/index'

const TodosOfflineRoute = TodosOfflineRouteImport.update({
  id: '/todos-offline',
  path: '/todos-offline',
  getParentRoute: () => rootRouteImport,
} as any)
const TodosRoute = TodosRouteImport.update({
  id: '/todos',
  path: '/todos',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminChatRoute = AdminChatRouteImport.update({
  id: '/admin-chat',
  path: '/admin-chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin-chat': typeof AdminChatRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
  '/todos-offline': typeof TodosOfflineRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin-chat': typeof AdminChatRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
  '/todos-offline': typeof TodosOfflineRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin-chat': typeof AdminChatRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/todos': typeof TodosRoute
  '/todos-offline': typeof TodosOfflineRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin-chat'
    | '/dashboard'
    | '/login'
    | '/todos'
    | '/todos-offline'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin-chat'
    | '/dashboard'
    | '/login'
    | '/todos'
    | '/todos-offline'
  id:
    | '__root__'
    | '/'
    | '/admin-chat'
    | '/dashboard'
    | '/login'
    | '/todos'
    | '/todos-offline'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminChatRoute: typeof AdminChatRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  TodosRoute: typeof TodosRoute
  TodosOfflineRoute: typeof TodosOfflineRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/todos-offline': {
      id: '/todos-offline'
      path: '/todos-offline'
      fullPath: '/todos-offline'
      preLoaderRoute: typeof TodosOfflineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/todos': {
      id: '/todos'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin-chat': {
      id: '/admin-chat'
      path: '/admin-chat'
      fullPath: '/admin-chat'
      preLoaderRoute: typeof AdminChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminChatRoute: AdminChatRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  TodosRoute: TodosRoute,
  TodosOfflineRoute: TodosOfflineRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
